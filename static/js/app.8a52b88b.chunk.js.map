{"version":3,"sources":["firebase.js","Screens/LoginScreen.js","Screens/RegisterScreen.js","components/CustomListItem.js","Screens/HomeScreen.js","Screens/ChatScreen.js","App.js","index.js"],"names":["app","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","auth","getAuth","db","getFirestore","LoginScreen","navigation","useState","email","setEmail","password","setPassword","useEffect","onAuthStateChanged","authuser","replace","KeyboardAvoidingView","style","styles","container","behavior","View","subcontainer","StatusBar","source","uri","width","height","Inputcontainer","placeholder","inputStyle","color","value","onChangeText","text","Input","secureTextEntry","title","buttonStyle","backgroundColor","onPress","signInWithEmailAndPassword","then","console","log","user","displayName","catch","err","containerStyle","buttons","titleStyle","navigate","StyleSheet","create","flex","justifyContent","alignItems","elevation","marginVertical","borderRadius","RegisterScreen","photoUrl","setPhotoUrl","name","setName","useLayoutEffect","setOptions","headerBackTitle","createUserWithEmailAndPassword","updateProfile","photoURL","alert","message","marginBottom","padding","marginTop","CustomListItem","id","data","rounded","Content","Title","fontWeight","chatName","Subtitle","HomeScreen","modal","setModal","srPass","setsrPass","setData","roomModal","setRoomModal","roomName","setRoomName","roomPassword","setRoomPassword","chats","setChats","toggleModal","getDocument","a","async","snapRef","collection","getDocs","snapshot","docs","map","doc","signOut1","signOut","headerStyle","headerTitleStyle","headerTintColor","headerLeft","marginLeft","TouchableOpacity","currentUser","headerRight","flexDirection","marginRight","AntDesign","size","MaterialIcons","SafeAreaView","ScrollView","isVisible","onBackdropPress","overlayStyle","h4","h4Style","borderBottomWidth","borderBottomColor","paddingBottom","type","leftIcon","MaterialCommunityIcons","addDoc","chatPassword","ChatScreen","route","chat","setChat","setMessage","dbRef","document","params","collect","fetching","setChatRef","q","query","orderBy","getMessage","Schat","position","top","left","zIndex","Text","RChat","right","footer","TextInput","textInput","Keyboard","dismiss","timestamp","serverTimestamp","FontAwesome","bottom","paddingHorizontal","borderWidth","borderColor","minWidth","textAlign","alignSelf","registerRootComponent","Stack","createNativeStackNavigator","NavigationContainer","Navigator","initialRouteName","screenOptions","headerTitleAlign","Screen","options","component"],"mappings":"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","file":"static/js/app.8a52b88b.chunk.js","sourcesContent":["\r\nimport { initializeApp } from 'firebase/app';\r\nimport { getAuth } from \"firebase/auth\";\r\nimport { getFirestore } from \"firebase/firestore\";\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nconst firebaseConfig = {\r\n    apiKey: \"AIzaSyCZfBCWr63PODf7XAZgIDzsRKPg2TVxu7k\",\r\n    authDomain: \"signl12.firebaseapp.com\",\r\n    projectId: \"signl12\",\r\n    storageBucket: \"signl12.appspot.com\",\r\n    messagingSenderId: \"829601690341\",\r\n    appId: \"1:829601690341:web:59c00091e3529a75371a0c\"\r\n  };\r\n  \r\n\r\n\r\n  const app=initializeApp(firebaseConfig);\r\nexport const auth = getAuth(app);\r\nexport const db= getFirestore(app);\r\n\r\n\r\n\r\n\r\n","import { KeyboardAvoidingView, StyleSheet, Text, View } from 'react-native'\r\nimport {Button,Input,Image} from 'react-native-elements'\r\nimport React ,{useState,useEffect}from 'react'\r\nimport { StatusBar } from 'expo-status-bar'\r\nimport { onAuthStateChanged ,signInWithEmailAndPassword} from 'firebase/auth'\r\nimport { auth } from '../firebase'\r\n\r\n\r\nconst LoginScreen = ({navigation}) => {\r\n\r\n        const[email,setEmail]=useState('');\r\n        const[password,setPassword]=useState('');\r\n\r\n\r\n\r\nconst signUp=()=>{\r\n\r\n  navigation.navigate('register')\r\n\r\n}\r\n\r\n\r\nconst SignIn=()=>{\r\n\r\n    signInWithEmailAndPassword(auth,email,password).then(authuser=>console.log(authuser.user.displayName)).catch(err=>console.log(err))\r\n\r\n\r\n}\r\nuseEffect(() => {\r\n  const unsubscribe =onAuthStateChanged(auth,(authuser) => {\r\n\r\n        if(authuser)\r\n        {\r\n          navigation.replace(\"Home\")\r\n        }\r\n\r\n\r\n  })\r\n\r\n  return unsubscribe;\r\n}, []);\r\n\r\n\r\n  return (  \r\n    <KeyboardAvoidingView style={styles.container} behavior=\"padding\" >\r\n        <View style={styles.subcontainer}>\r\n      <StatusBar style='light'/>\r\n        <Image source={{uri:'https://res.cloudinary.com/dtrp3lqrw/image/upload/v1651573130/whatsapp-logo-computer-icons-whatsapp-1463f65965daaf8589f28f2514a6a7db_uifjhn.png'}} style={{width:150,height:150}}/>\r\n\r\n        <View style={styles.Inputcontainer}>\r\n            <Input placeholder='enter your email'\r\n                  inputStyle={{color:'#25D366'}}\r\n                value={email}\r\n            onChangeText={(text)=>setEmail(text)} style={styles.Input}/>\r\n            <Input \r\n            placeholder='password' \r\n            secureTextEntry={true}\r\n           \r\n            value={password}\r\n             onChangeText={(text)=>setPassword(text)}\r\n            />\r\n\r\n        </View>\r\n       \r\n        <Button title=\"Login\"  buttonStyle={{backgroundColor:'#25D366'}} onPress={SignIn} containerStyle={styles.buttons}/>\r\n        <Button title=\"Register\" containerStyle={styles.buttons} buttonStyle={{backgroundColor:'white'}} titleStyle={{color:\"#25D366\"}} onPress={signUp}/>\r\n     \r\n        </View>\r\n           \r\n    </KeyboardAvoidingView>\r\n  )\r\n}\r\n\r\nexport default LoginScreen\r\n\r\nconst styles = StyleSheet.create({\r\n\r\n        container:{\r\n            flex:1, justifyContent: 'center',  alignItems: 'center',\r\n           elevation:2\r\n\r\n        },\r\n        Inputcontainer:{\r\n                width:250,\r\n                marginVertical:10,\r\n                \r\n\r\n        },\r\n        buttons:{\r\n            width:150,\r\n            \r\n            marginVertical:5\r\n\r\n        },\r\n        subcontainer:{\r\n            alignItems: 'center',\r\n            justifyContent: 'center',\r\n            width:300,\r\n            height:500,\r\n            backgroundColor:'white',\r\n            borderRadius:30\r\n\r\n        }\r\n\r\n\r\n\r\n\r\n})","import { KeyboardAvoidingView,StyleSheet,  View } from 'react-native'\r\nimport React,{useLayoutEffect, useState} from 'react'\r\nimport {Button,Input,Image,Text} from 'react-native-elements'\r\nimport { StatusBar } from 'expo-status-bar'\r\nimport { auth } from '../firebase'\r\nimport {createUserWithEmailAndPassword,updateProfile} from 'firebase/auth'\r\n\r\n\r\nconst RegisterScreen = ({navigation}) => {\r\n\r\n  const[email,setEmail]=useState('');\r\n  const[password,setPassword]=useState('');\r\n  const[photoUrl,setPhotoUrl]=useState('');\r\n  const[name,setName]=useState('');\r\n\r\n\r\n\r\nuseLayoutEffect(() => {\r\n  navigation.setOptions({headerBackTitle: 'login'})\r\n\r\n  \r\n}, [navigation])\r\n\r\n\r\nconst register = () =>{\r\n\r\n\r\n   createUserWithEmailAndPassword(auth,email,password).then((authuser)=>{updateProfile(authuser.user,{displayName:name,photoURL:photoUrl})}).catch(err =>{alert(err.message)})\r\n\r\n\r\n\r\n}\r\n\r\n\r\nconst signUp=()=>{\r\n\r\nnavigation.navigate('login')\r\n\r\n}\r\n\r\n\r\n    return(\r\n  <KeyboardAvoidingView style={styles.container} behavior=\"padding\" >\r\n    \r\n        <View style={styles.subcontainer}>\r\n      <StatusBar style='light'/>\r\n        <Image source={{uri:'https://res.cloudinary.com/dtrp3lqrw/image/upload/v1651573130/whatsapp-logo-computer-icons-whatsapp-1463f65965daaf8589f28f2514a6a7db_uifjhn.png'}} style={{width:100,height:100}}/>\r\n\r\n        <View style={styles.Inputcontainer}>\r\n            <Input placeholder='enter your email'\r\n                  inputStyle={{color:'#25D366'}}\r\n                value={email}\r\n            onChangeText={(text)=>setEmail(text)} style={styles.Input}/>\r\n            <Input \r\n            placeholder='password' \r\n            secureTextEntry={true}\r\n           \r\n            value={password}\r\n             onChangeText={(text)=>setPassword(text)}\r\n            />\r\n           <Input \r\n            placeholder='your name' \r\n           \r\n           \r\n            value={name}\r\n             onChangeText={(text)=>setName(text)}\r\n            />\r\n             <Input \r\n            placeholder='photoUrl' \r\n           \r\n           \r\n            value={photoUrl}\r\n             onChangeText={(text)=>setPhotoUrl(text)}\r\n            />\r\n        </View>\r\n       \r\n        <Button title=\"Register\"  buttonStyle={{backgroundColor:'#25D366'}} onPress={register} containerStyle={styles.buttons}/>\r\n        <Button title=\"already have an account\" containerStyle={styles.buttons} buttonStyle={{backgroundColor:'white'}} titleStyle={{color:\"#25D366\"}} onPress={signUp}/>\r\n     \r\n        </View>\r\n           \r\n    </KeyboardAvoidingView>\r\n    )\r\n  \r\n}\r\n\r\nexport default RegisterScreen\r\n\r\nconst styles = StyleSheet.create({\r\n\r\n        container:{\r\n            flex:1, justifyContent: 'center',  alignItems: 'center',\r\n           elevation:2,\r\n          \r\n\r\n        },\r\n        Inputcontainer:{\r\n                  flex:1,\r\n                width:300,\r\n                marginBottom:3,\r\n                padding:40\r\n                \r\n                \r\n\r\n        },\r\n        buttons:{\r\n            width:150,\r\n            \r\n            marginTop:10,\r\n\r\n        },\r\n        subcontainer:{\r\n            alignItems: 'center',\r\n            justifyContent: 'center',\r\n            width:300,\r\n            height:500,\r\n            backgroundColor:'white',\r\n            borderRadius:30\r\n\r\n        }\r\n\r\n\r\n\r\n\r\n})\r\n   ","import { StyleSheet, Text, View } from 'react-native'\r\nimport {ListItem ,Avatar} from 'react-native-elements'\r\nimport React from 'react'\r\n\r\nconst CustomListItem = ({id,data}) => {\r\n\r\nconst link='https://th.bing.com/th/id/OIP.b4-vsmAyxXeW48UupfHhgwAAAA?pid=ImgDet&w=300&h=300&rs=1'\r\n\r\n\r\n\r\n\r\n\r\n\r\n  return (\r\n   <ListItem>\r\n       <Avatar rounded source={{uri:link}}/>\r\n       <ListItem.Content>\r\n       <ListItem.Title style={{fontWeight:'600'}} >{data.chatName}</ListItem.Title>\r\n       <ListItem.Subtitle>creator</ListItem.Subtitle>\r\n       </ListItem.Content>\r\n   </ListItem>\r\n  )\r\n}\r\n\r\nexport default CustomListItem\r\n\r\nconst styles = StyleSheet.create({})","import { SafeAreaView, ScrollView, StyleSheet,  TouchableOpacity, View } from 'react-native'\r\nimport React, { useEffect, useLayoutEffect ,useState} from 'react'\r\nimport CustomListItem from '../components/CustomListItem'\r\nimport { Avatar,Overlay ,Input,Text,Button} from 'react-native-elements'\r\nimport { auth, db } from '../firebase'\r\nimport { signOut } from 'firebase/auth'\r\nimport { MaterialIcons } from '@expo/vector-icons'; \r\nimport { AntDesign } from '@expo/vector-icons'; \r\nimport { MaterialCommunityIcons } from '@expo/vector-icons';\r\nimport Icon from 'react-native-vector-icons/FontAwesome';\r\nimport { collection,addDoc, getDocs} from 'firebase/firestore'\r\n\r\nconst HomeScreen = ({navigation}) => {\r\n\r\n        const [modal,setModal]=useState(false);\r\n        const[srPass,setsrPass]=useState('');\r\n        const[data,setData]=useState(\"\");\r\n        const [roomModal,setRoomModal]=useState(false);\r\n        const[roomName,setRoomName]=useState(\"\");\r\n        const[roomPassword,setRoomPassword]=useState(\"\");\r\n        const [chats,setChats]=useState([]);\r\n\r\nconst roomModalToggle=(id,data)=>{\r\n                setData({...data,id});\r\n            roomModal?setRoomModal(false):setRoomModal(true);\r\n\r\n}\r\n\r\n\r\n        const toggleModal=()=>{\r\n\r\n                modal?setModal(false):setModal(true);\r\n\r\n        }\r\n\r\n        const getDocument = async()=>{\r\n   \r\n            const snapRef=collection(db,'chat');\r\n\r\n    const snapshot= await getDocs(snapRef)\r\n     setChats(snapshot.docs.map((doc)=>({\r\n        id:doc.id,\r\n        data:doc.data()\r\n    }))) \r\n     \r\n         \r\n    } \r\n\r\nconst createChat= async ()=>{\r\n\r\n    const data= await addDoc(collection(db,'chat'),{chatName:roomName,chatPassword:roomPassword});\r\n    setModal(false);\r\n\r\n}\r\n\r\n    const signOut1=()=>{\r\n\r\n        signOut(auth).then(navigation.replace('login')).catch(err =>console.log(err))\r\n        \r\n\r\n\r\n    }\r\n    const navigateChat=()=>{\r\n        setRoomModal(false);\r\n            navigation.navigate('chats',data);\r\n           \r\n\r\n    }\r\n\r\n    useLayoutEffect(()=>{\r\n\r\n            navigation.setOptions({title:\"whatsappArz\",headerStyle:{backgroundColor:\"#25D366\",}\r\n             ,headerTitleStyle:{color:\"white\"},headerTintColor:\"black\",\r\n            \r\n            headerLeft:()=>(\r\n                    <View style={{marginLeft:3}}>\r\n                        <TouchableOpacity onPress={signOut1}>\r\n                            <Avatar rounded source={{uri:auth?.currentUser?.photoURL}}/>\r\n                            </TouchableOpacity>\r\n                    </View>\r\n\r\n\r\n            ),\r\n            headerRight: ()=>(\r\n                <View style={{width:80,justifyContent: 'space-between',alignItems: 'center',flexDirection:'row',marginRight:30}}>\r\n                    <TouchableOpacity>\r\n                    <AntDesign name=\"camera\" onPress={getDocument} size={24} color=\"white\" />\r\n                    </TouchableOpacity>\r\n                    <TouchableOpacity onPress={toggleModal}  >\r\n                    <MaterialIcons name=\"edit\" size={24} color=\"white\" />\r\n                    </TouchableOpacity>\r\n                </View>\r\n            )\r\n            \r\n            \r\n            \r\n            }\r\n  \r\n             )\r\n\r\n\r\n\r\n    },[])\r\n\r\n\r\n\r\n\r\n  return (\r\n   <SafeAreaView>\r\n      \r\n       <ScrollView>\r\n           {chats.map(({id,data})=>(\r\n               <TouchableOpacity key={id} onPress={()=>{  setData({...data,id});\r\n              \r\n               roomModal?setRoomModal(false):setRoomModal(true);}}>\r\n               <CustomListItem data={data} id={id} />\r\n               </TouchableOpacity>\r\n\r\n           ))}\r\n       \r\n        <Overlay isVisible={modal} onBackdropPress={toggleModal} overlayStyle={{width:300,height:500}}>\r\n            <Text h4 h4Style={{color: '#25D366',borderBottomWidth:1,borderBottomColor:'#25D366',paddingBottom:30,marginBottom:30}} >\r\n                create a room\r\n\r\n            </Text>\r\n            <Input type=\"text\" value={roomName} placeholder=\"enter room name\" onChangeText={(text)=>setRoomName(text)} leftIcon={<MaterialCommunityIcons name=\"door\" size={24} color=\"black\" />} />\r\n            <Input type=\"text\" value={roomPassword} setRoomName placeholder=\"enter a room password\" onChangeText={(text)=>setRoomPassword(text)} leftIcon={<MaterialCommunityIcons name=\"key\" size={24} color=\"black\" />} />\r\n            <Button type='solid' title={`Create Room`} onPress={createChat}/>\r\n        </Overlay>\r\n        <Overlay isVisible={roomModal} onBackdropPress={()=>{setRoomModal(false)}} overlayStyle={{width:300,height:500}}>\r\n        <Text h4 h4Style={{color: '#25D366',borderBottomWidth:1,borderBottomColor:'#25D366',paddingBottom:30,marginBottom:30}} >\r\n                enter {data.chatName} password \r\n\r\n            </Text>\r\n            <Input type=\"text\" value={srPass} placeholder=\"enter room password\" onChangeText={(text)=>setsrPass(text)} leftIcon={<MaterialCommunityIcons name=\"key\" size={24} color=\"black\" />} />\r\n            {data.chatPassword===srPass? <View>\r\n            <Text h4 h4Style={{color:'#25D366'}}>Correct</Text>\r\n            <Button title={`enter the room`} type={`solid`} buttonStyle={{backgroundColor:'#25D366'}} onPress={navigateChat}/>\r\n            </View>:<Text h4 h4Style={{color:'red'}}>inCorrect</Text>}\r\n           \r\n        </Overlay>\r\n       \r\n       </ScrollView>\r\n      \r\n   </SafeAreaView>\r\n  )\r\n}\r\n\r\nexport default HomeScreen\r\n\r\nconst styles = StyleSheet.create({})","import { Keyboard, KeyboardAvoidingView, SafeAreaView, ScrollView, StyleSheet, Text, TextInput, TouchableOpacity, View } from 'react-native'\r\nimport React ,{useLayoutEffect,useState,useEffect}from 'react'\r\nimport { StatusBar } from 'expo-status-bar'\r\nimport {Avatar} from 'react-native-elements'\r\nimport { FontAwesome } from '@expo/vector-icons';\r\nimport { auth, db } from '../firebase';\r\nimport { addDoc, collection, doc, getDocs, onSnapshot, orderBy, query, serverTimestamp, SnapshotMetadata } from 'firebase/firestore';\r\n\r\nconst ChatScreen = ({navigation,route}) => {\r\n\r\n\r\nconst[chat,setChat]=useState(\"\");\r\nconst[message,setMessage]=useState([]);\r\n\r\n        const dbRef=collection(db,'chat');\r\n        const document = doc(dbRef,route.params.id);\r\n        const collect =collection(document,'message')\r\n        const [fetching,setFetching] = useState(true);\r\n        const[chatRef,setChatRef]=useState([]);\r\n      \r\n\r\n\r\nconst sendMessage =async ()=>{\r\n    Keyboard.dismiss();\r\n       await addDoc(collect,{\r\n\r\n                    timestamp:serverTimestamp(),\r\n                    message:chat,\r\n                    displayName:auth.currentUser.displayName,\r\n                    photoURL: auth.currentUser.photoURL,\r\n                    email: auth.currentUser.email\r\n\r\n        })\r\n            setChatRef(chat);\r\n            setChat('');\r\n\r\n\r\n}\r\n\r\nuseLayoutEffect(() => {navigation.setOptions({title:route.params.chatName})},[navigation])\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nuseEffect(() => {\r\n    const getMessage =async () => {\r\n\r\n        const q=query(collect,orderBy('timestamp','desc'));\r\n  \r\n        \r\n        const data=await getDocs(q).then((snapshot) =>setMessage(snapshot.docs.map(doc=>({id:doc.id,data:doc.data()}))) )\r\n        return data;\r\n    \r\n    \r\n    }\r\n if(fetching===true)\r\n   getMessage();\r\n\r\n// console.log(message);\r\n\r\n\r\n\r\n\r\n},[message]);\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n  return (\r\n   <SafeAreaView style={{flex: 1,backgroundColor: 'white'}}>\r\n       <StatusBar style='dark'/>\r\n       <KeyboardAvoidingView style={styles.container}>\r\n        <>\r\n        <ScrollView style={styles.chat}>\r\n            {message.map(({id,data})=>(data.email===auth.currentUser.email?\r\n            <View key={id} style={styles.Schat}>\r\n                <Avatar rounded source={{uri:auth.currentUser.photoURL}} containerStyle={{position:'absolute',top:40,left:60,zIndex:1,marginBottom:2}}/>\r\n                    <Text style={{zIndex:1}}>{data.message}</Text>\r\n\r\n            </View>:\r\n            \r\n            \r\n            <View key={id} style={styles.RChat}>\r\n                    <Avatar rounded source={{uri:data.photoURL}} containerStyle={{position:'absolute',top:40,right:60,zIndex:1,marginBottom:2}}/>\r\n                    <Text style={{zIndex:1}}>{data.message}</Text>\r\n                    \r\n\r\n            </View>))}\r\n\r\n                   \r\n\r\n            \r\n\r\n\r\n        </ScrollView>\r\n        <View style={styles.footer}>\r\n\r\n            <TextInput  style={styles.textInput} placeholder='enter message' value={chat} \r\n            onChangeText={(text)=>{setChat(text);\r\n            }}/>\r\n\r\n            <TouchableOpacity onPress={sendMessage}><FontAwesome name=\"send\" size={24} color=\"#25D366\" /></TouchableOpacity>\r\n  \r\n\r\n\r\n        </View>\r\n        \r\n        </>\r\n\r\n\r\n       </KeyboardAvoidingView>\r\n   </SafeAreaView>\r\n  )\r\n}\r\n\r\nexport default ChatScreen\r\n\r\nconst styles = StyleSheet.create({\r\n\r\n    footer:{\r\n        bottom: 0,\r\n        height:50,\r\n        flexDirection: 'row',\r\n        alignItems: 'center',\r\n        justifyContent:'space-between',\r\n        paddingHorizontal:20\r\n\r\n    },\r\n    chat:{},\r\n    container: {\r\n        flex: 1,\r\n    },\r\n    textInput:{\r\n        height:40,\r\n        flex: 1,\r\n       \r\n        borderWidth:1,\r\n        borderColor:'transparent',\r\n        borderRadius:30,\r\n        padding: 10\r\n    },\r\n    Schat:{\r\n\r\n        backgroundColor:\"#ece5dd\",\r\n        position: \"relative\",\r\n        height:60,\r\n        minWidth:100,\r\n        marginVertical:10,\r\n       textAlign:'center',\r\n        borderRadius:20,\r\n        color:'black',\r\n        padding:10,\r\n      \r\n        alignSelf:'flex-end',\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n\r\n\r\n\r\n    },\r\n    RChat:{\r\n        justifyContent: 'center',\r\n        backgroundColor:\"#dcf8c6\",\r\n        minWidth:100,\r\n        textAlign:'center',\r\n        borderRadius:20,\r\n        height:60,\r\n        width:100,\r\n        alignItems: 'center',\r\n        color:'black',\r\n        padding:10,\r\n        marginVertical:5,\r\n        position:\"relative\",\r\n    },\r\n\r\n\r\n\r\n})","import { StatusBar } from 'expo-status-bar';\nimport React from 'react';\nimport { StyleSheet, Text, View } from 'react-native';\nimport {NavigationContainer} from '@react-navigation/native';\nimport {createNativeStackNavigator} from '@react-navigation/native-stack';\nimport LoginScreen from './Screens/LoginScreen';\nimport RegisterScreen from './Screens/RegisterScreen';\nimport HomeScreen from './Screens/HomeScreen';\nimport ChatScreen from './Screens/ChatScreen';\n\nexport default function App() {\n\n    const Stack = createNativeStackNavigator();\n\n  return (\n    <NavigationContainer>\n      <Stack.Navigator   initialRouteName='Home'  screenOptions={{headerStyle:{backgroundColor:'white'},headerTitleStyle:{color:'#25D366'},headerTitleAlign:\"center\"}}>\n\n        <Stack.Screen options={{title:'Lets SignIn'}} name=\"login\"  component={LoginScreen} />\n        <Stack.Screen options={{title:'Register'}} name=\"register\"  component={RegisterScreen} />\n        <Stack.Screen options={{title:'Whatsapp'}}  name=\"Home\"  component={HomeScreen} />\n        <Stack.Screen options={{title:'chat'}}  name=\"chats\"  component={ChatScreen} />\n\n\n      </Stack.Navigator>\n\n\n    </NavigationContainer>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#fff',\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n});\n","import { registerRootComponent } from 'expo';\n\nimport App from './App';\n\n// registerRootComponent calls AppRegistry.registerComponent('main', () => App);\n// It also ensures that whether you load the app in Expo Go or in a native build,\n// the environment is set up appropriately\nregisterRootComponent(App);\n"],"sourceRoot":""}